# Generated from xyndril.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,39,247,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,
        6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
        1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
        1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,
        1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,4,34,
        202,8,34,11,34,12,34,203,1,34,1,34,4,34,208,8,34,11,34,12,34,209,
        3,34,212,8,34,1,35,1,35,5,35,216,8,35,10,35,12,35,219,9,35,1,35,
        1,35,1,35,5,35,224,8,35,10,35,12,35,227,9,35,1,35,3,35,230,8,35,
        1,36,1,36,5,36,234,8,36,10,36,12,36,237,9,36,1,37,1,37,1,38,4,38,
        242,8,38,11,38,12,38,243,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        1,0,6,1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,92,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,254,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
        0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,83,1,0,
        0,0,5,85,1,0,0,0,7,87,1,0,0,0,9,89,1,0,0,0,11,91,1,0,0,0,13,94,1,
        0,0,0,15,96,1,0,0,0,17,98,1,0,0,0,19,103,1,0,0,0,21,109,1,0,0,0,
        23,111,1,0,0,0,25,113,1,0,0,0,27,125,1,0,0,0,29,131,1,0,0,0,31,135,
        1,0,0,0,33,140,1,0,0,0,35,144,1,0,0,0,37,151,1,0,0,0,39,153,1,0,
        0,0,41,158,1,0,0,0,43,164,1,0,0,0,45,169,1,0,0,0,47,171,1,0,0,0,
        49,173,1,0,0,0,51,175,1,0,0,0,53,178,1,0,0,0,55,181,1,0,0,0,57,183,
        1,0,0,0,59,186,1,0,0,0,61,188,1,0,0,0,63,191,1,0,0,0,65,194,1,0,
        0,0,67,197,1,0,0,0,69,201,1,0,0,0,71,229,1,0,0,0,73,231,1,0,0,0,
        75,238,1,0,0,0,77,241,1,0,0,0,79,80,5,108,0,0,80,81,5,101,0,0,81,
        82,5,116,0,0,82,2,1,0,0,0,83,84,5,58,0,0,84,4,1,0,0,0,85,86,5,61,
        0,0,86,6,1,0,0,0,87,88,5,44,0,0,88,8,1,0,0,0,89,90,5,59,0,0,90,10,
        1,0,0,0,91,92,5,105,0,0,92,93,5,102,0,0,93,12,1,0,0,0,94,95,5,40,
        0,0,95,14,1,0,0,0,96,97,5,41,0,0,97,16,1,0,0,0,98,99,5,101,0,0,99,
        100,5,108,0,0,100,101,5,115,0,0,101,102,5,101,0,0,102,18,1,0,0,0,
        103,104,5,99,0,0,104,105,5,108,0,0,105,106,5,97,0,0,106,107,5,115,
        0,0,107,108,5,115,0,0,108,20,1,0,0,0,109,110,5,123,0,0,110,22,1,
        0,0,0,111,112,5,125,0,0,112,24,1,0,0,0,113,114,5,99,0,0,114,115,
        5,111,0,0,115,116,5,110,0,0,116,117,5,115,0,0,117,118,5,116,0,0,
        118,119,5,114,0,0,119,120,5,117,0,0,120,121,5,99,0,0,121,122,5,116,
        0,0,122,123,5,111,0,0,123,124,5,114,0,0,124,26,1,0,0,0,125,126,5,
        114,0,0,126,127,5,111,0,0,127,128,5,117,0,0,128,129,5,116,0,0,129,
        130,5,101,0,0,130,28,1,0,0,0,131,132,5,71,0,0,132,133,5,69,0,0,133,
        134,5,84,0,0,134,30,1,0,0,0,135,136,5,80,0,0,136,137,5,79,0,0,137,
        138,5,83,0,0,138,139,5,84,0,0,139,32,1,0,0,0,140,141,5,80,0,0,141,
        142,5,85,0,0,142,143,5,84,0,0,143,34,1,0,0,0,144,145,5,68,0,0,145,
        146,5,69,0,0,146,147,5,76,0,0,147,148,5,69,0,0,148,149,5,84,0,0,
        149,150,5,69,0,0,150,36,1,0,0,0,151,152,5,47,0,0,152,38,1,0,0,0,
        153,154,5,116,0,0,154,155,5,114,0,0,155,156,5,117,0,0,156,157,5,
        101,0,0,157,40,1,0,0,0,158,159,5,102,0,0,159,160,5,97,0,0,160,161,
        5,108,0,0,161,162,5,115,0,0,162,163,5,101,0,0,163,42,1,0,0,0,164,
        165,5,110,0,0,165,166,5,117,0,0,166,167,5,108,0,0,167,168,5,108,
        0,0,168,44,1,0,0,0,169,170,5,43,0,0,170,46,1,0,0,0,171,172,5,45,
        0,0,172,48,1,0,0,0,173,174,5,42,0,0,174,50,1,0,0,0,175,176,5,61,
        0,0,176,177,5,61,0,0,177,52,1,0,0,0,178,179,5,33,0,0,179,180,5,61,
        0,0,180,54,1,0,0,0,181,182,5,60,0,0,182,56,1,0,0,0,183,184,5,60,
        0,0,184,185,5,61,0,0,185,58,1,0,0,0,186,187,5,62,0,0,187,60,1,0,
        0,0,188,189,5,62,0,0,189,190,5,61,0,0,190,62,1,0,0,0,191,192,5,38,
        0,0,192,193,5,38,0,0,193,64,1,0,0,0,194,195,5,124,0,0,195,196,5,
        124,0,0,196,66,1,0,0,0,197,198,5,61,0,0,198,199,5,62,0,0,199,68,
        1,0,0,0,200,202,7,0,0,0,201,200,1,0,0,0,202,203,1,0,0,0,203,201,
        1,0,0,0,203,204,1,0,0,0,204,211,1,0,0,0,205,207,5,46,0,0,206,208,
        7,0,0,0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,0,209,210,
        1,0,0,0,210,212,1,0,0,0,211,205,1,0,0,0,211,212,1,0,0,0,212,70,1,
        0,0,0,213,217,5,34,0,0,214,216,8,1,0,0,215,214,1,0,0,0,216,219,1,
        0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,220,1,0,0,0,219,217,1,
        0,0,0,220,230,5,34,0,0,221,225,5,39,0,0,222,224,8,2,0,0,223,222,
        1,0,0,0,224,227,1,0,0,0,225,223,1,0,0,0,225,226,1,0,0,0,226,228,
        1,0,0,0,227,225,1,0,0,0,228,230,5,39,0,0,229,213,1,0,0,0,229,221,
        1,0,0,0,230,72,1,0,0,0,231,235,7,3,0,0,232,234,7,4,0,0,233,232,1,
        0,0,0,234,237,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,74,1,0,
        0,0,237,235,1,0,0,0,238,239,7,0,0,0,239,76,1,0,0,0,240,242,7,5,0,
        0,241,240,1,0,0,0,242,243,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,
        0,244,245,1,0,0,0,245,246,6,38,0,0,246,78,1,0,0,0,9,0,203,209,211,
        217,225,229,235,243,1,6,0,0
    ]

class xyndrilLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    ARROW = 34
    NUMBER = 35
    STRING = 36
    IDENTIFIER = 37
    DIGIT = 38
    WS = 39

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'let'", "':'", "'='", "','", "';'", "'if'", "'('", "')'", "'else'", 
            "'class'", "'{'", "'}'", "'constructor'", "'route'", "'GET'", 
            "'POST'", "'PUT'", "'DELETE'", "'/'", "'true'", "'false'", "'null'", 
            "'+'", "'-'", "'*'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", 
            "'&&'", "'||'", "'=>'" ]

    symbolicNames = [ "<INVALID>",
            "ARROW", "NUMBER", "STRING", "IDENTIFIER", "DIGIT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "ARROW", "NUMBER", "STRING", "IDENTIFIER", "DIGIT", 
                  "WS" ]

    grammarFileName = "xyndril.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


