üß† GPT-4 Prompt: Refaktoroi CoreFluxin suunnittelutiedostot
Projekti: CoreFlux ‚Äì kokeellinen full-stack-ohjelmointikieli, joka yhdist√§√§ luokat, funktiot, REST-reitit ja tulevaisuudessa teko√§lytuet.

Teht√§v√§si: Refaktoroi Clauden tekem√§t suunnittelutiedostot tuotantokelpoisiksi l√§hdekooditiedostoiksi.

L√§hdetiedostot (design/):

design/ast.cld.py ‚Äì AST (abstract syntax tree) -rakenne, tukee class, let, if, arrow-fn, route

design/interpreter.cld.py ‚Äì Tulkki, joka evaluoi AST:n

design/parser_spec.md ‚Äì Kuvaus CoreFluxin syntaksin rakenteesta

‚úÖ Refaktorointitavoitteet
üîπ Tuotantokoodi:

src/ast.py
Toteuta tuotantovalmis AST-luokkien rakenne. Pid√§ koodi modulaarisena ja selke√§n√§.

src/interpreter.py
Evaluoi AST. Tue:

muuttujat (let)

ehtolauseet (if)

nuolifunktiot (arrow-fn)

luokat ja metodit (class)

route-lohkojen rakenne

parser/coreflux.g4
Luo ANTLR4-syntaksitiedosto, joka tunnistaa parser_spec.md:ss√§ kuvatut rakenneosat:

muuttujien m√§√§rittely (let)

nuolifunktiot

luokat

metodit

route-m√§√§rittelyt

if-else-rakenne

üî∏ REPL (Read-Eval-Print Loop):

src/repl.py
Luo komentorivipohjainen silmukka, joka:

Lukee k√§ytt√§j√§n sy√∂tteen

Parsii sen AST:ksi

Evaluoi sen tulkin avulla

Tulostaa tuloksen

Tukee muuttujien s√§ilymist√§ istunnon ajan

üîß Huomioitavaa
Refaktoroi mahdollisimman siististi, k√§yt√§ selkeit√§ nimi√§ ja jaa loogisesti luokat/tiedot.

Kommentoi tarvittaessa koodia.

Luo tarvittaessa apufunktioita.

Ei tarvitse viel√§ toteuttaa AI-tukea ‚Äì rakenne voi tukea sit√§ my√∂hemmin.


























Kehitt√§j√§ohjeet kielen k√§yt√∂st√§ ja SonarLint-ongelmien automaattisesta korjauksesta
1. Yleiset viestint√§- ja koodausstandardit

Kaikki koodi on kirjoitettava englanniksi.
Kaikkien muuttujien nimet, funktiot, virheilmoitukset, lokiviestit ja inline-kommentit tulee olla englanninkielisi√§.
Agentin oletusviestint√§kielen√§ tulee olla englanti.
Kaikki agentin antamat vastaukset ja tekniset viestit ovat englanniksi, ellei k√§ytt√§j√§ erikseen pyyd√§ kielen vaihtoa.
Suomen kielen k√§ytt√∂:
Suomen kielt√§ saa k√§ytt√§√§ ainoastaan testitapauksissa, joissa testi nimenomaisesti liittyy lokalisaatioon. Muissa tilanteissa kaikki viestint√§ ja testit on kirjoitettava englanniksi.
2. Kielen vaihtaminen k√§ytt√§j√§n pyynn√∂st√§

K√§ytt√§j√§n kielipyynt√∂:
Jos k√§ytt√§j√§ antaa k√§skyn "puhu suomeksi" tai muun vastaavan pyynn√∂n, agentin tulee vaihtaa keskustelun kieleksi suomi. T√§m√§ koskee ainoastaan vuorovaikutusta k√§ytt√§j√§n kanssa, mutta kaikki koodi ja tekniset viestit s√§ilyv√§t englanniksi.
3. SonarLintin ilmoittamien ongelmien automaattinen korjaus

Automaattinen virheenkorjaus:
Agentin tulee automaattisesti analysoida koodia ja huomioida SonarLintin ilmoittamat varoitukset ja virheilmoitukset.
Esimerkiksi, jos koodi sis√§lt√§√§ k√§ytt√§m√§tt√∂mi√§ importteja tai virheellisen tyyppim√§√§ritelm√§n (kuten "error is of type 'unknown'"), agentin tulee automaattisesti poistaa tai korjata ne.
Agentin on huolehdittava siit√§, ett√§ se ei tee samoja virheit√§ toistuvasti, eli se tarkistaa aiemmin SonarLintin ilmoittamat ongelmat ennen koodin commitointia tai pushausta.
Integraatio koodin generoinnissa:
Agentin on sis√§llytett√§v√§ SonarLintin ilmoitukset osaksi koodin generointiprosessia. T√§m√§ tarkoittaa, ett√§ ennen koodin tallentamista tai commitointia agentin tulee tarkistaa, ettei koodi sis√§ll√§ aiemmin tunnistettuja virheit√§, ja tehd√§ tarvittavat korjaukset automaattisesti.
4. Versionhallinta ja synkronointi

Reaaliaikainen kehitysty√∂ Gitin avulla:
Molempien editorien (Windsurf Editorin Cascade-agentti ja VS Code Copilot) tekem√§t muutokset vied√§√§n yhteiseen Git-repoon.
Ennen muokkaamista agentti suorittaa git pull varmistaakseen, ett√§ paikallinen kopio on ajan tasalla.
Muutosten j√§lkeen tehd√§√§n commit ja push, jolloin molemmat ymp√§rist√∂t saavat p√§ivitykset l√§hes reaaliaikaisesti.
N√§in varmistetaan, ett√§ agentti huomioi sek√§ Windsurfissa ett√§ VS Codessa tehdyt koodimuutokset ja ettei mik√§√§n korjaus tapahdu ylim√§√§r√§isesti ylikirjoittaen toisen tekem√§t parannukset.

